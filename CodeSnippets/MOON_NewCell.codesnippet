<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>MOON_NewCell</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>///&lt;#NAME#&gt;Cell 用户事件
protocol &lt;#NAME#&gt;CellDelegate: class {
    func &lt;#NAME#&gt;(cell: &lt;#NAME#&gt;Cell, event: &lt;#NAME#&gt;Cell.Event)
}

///&lt;#NAME#&gt;Cell 数据源
protocol &lt;#NAME#&gt;CellDataSource {
    
}

class &lt;#NAME#&gt;Cell: UITableViewCell {

//MARK: Interface
    
    enum Event {
        
    }
    private weak var delegate: &lt;#NAME#&gt;CellDelegate?
    func bindCell(delegate: &lt;#NAME#&gt;CellDelegate) {
        self.delegate = delegate
    }
    
    func configCell(dataSource: &lt;#NAME#&gt;CellDataSource) {
        
    }
    
//MARK: Life Cycle
    
    override init(style: UITableViewCell.CellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        
        self.selectionStyle = .none
        
        loadViewsFor&lt;#NAME#&gt;(box: contentView)
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
//MARK: View
    
    private func loadViewsFor&lt;#NAME#&gt;(box: UIView) {
        
        
        loadConstraintsFor&lt;#NAME#&gt;(box: box)
    }
    
    private func loadConstraintsFor&lt;#NAME#&gt;(box: UIView) {
        
    }
    
//MARK: Event
    
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>MOON_NewCell</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetPlatformFamily</key>
	<string>iphoneos</string>
	<key>IDECodeSnippetSummary</key>
	<string>初始化一个新的自定义 UITableViewCell</string>
	<key>IDECodeSnippetTitle</key>
	<string>MOON_NewCell</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
